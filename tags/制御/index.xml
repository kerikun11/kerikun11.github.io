<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>制御 on KERI&#39;s Lab</title>
    <link>https://kerikeri.top/tags/%E5%88%B6%E5%BE%A1/</link>
    <description>Recent content in 制御 on KERI&#39;s Lab</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <managingEditor>kerikun11&#43;web@gmail.com (けり)</managingEditor>
    <webMaster>kerikun11&#43;web@gmail.com (けり)</webMaster>
    <lastBuildDate>Sat, 25 Apr 2020 14:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://kerikeri.top/tags/%E5%88%B6%E5%BE%A1/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>なめらかなスラロームの設計④ 生成結果</title>
      <link>https://kerikeri.top/posts/2020-04-25-slalom-trajectory-4/</link>
      <pubDate>Sat, 25 Apr 2020 14:00:00 +0900</pubDate>
      <author>kerikun11&#43;web@gmail.com (けり)</author>
      <guid>https://kerikeri.top/posts/2020-04-25-slalom-trajectory-4/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://kerikeri.top/posts/2020-04-25-slalom-trajectory-3/&#34;&gt;前回の記事&lt;/a&gt;
の続きです．&lt;/p&gt;
&lt;p&gt;今回の記事では，
前回までに紹介してきた内容をもとに，
&lt;a href=&#34;https://kerikeri.top/posts/2017-09-03-pattern-of-turn/&#34;&gt;マイクロマウスの走行パターン&lt;/a&gt;
の軌道設計結果を紹介します．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>なめらかなスラロームの設計③ C&#43;&#43;による実装</title>
      <link>https://kerikeri.top/posts/2020-04-25-slalom-trajectory-3/</link>
      <pubDate>Sat, 25 Apr 2020 13:00:00 +0900</pubDate>
      <author>kerikun11&#43;web@gmail.com (けり)</author>
      <guid>https://kerikeri.top/posts/2020-04-25-slalom-trajectory-3/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://kerikeri.top/posts/2020-04-25-slalom-trajectory-2/&#34;&gt;前回の記事&lt;/a&gt;
の続きです．&lt;/p&gt;
&lt;p&gt;今回の記事では，なめらかなスラローム軌道の C++による実装例を紹介します．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>なめらかなスラロームの設計② 設計方法</title>
      <link>https://kerikeri.top/posts/2020-04-25-slalom-trajectory-2/</link>
      <pubDate>Sat, 25 Apr 2020 12:00:00 +0900</pubDate>
      <author>kerikun11&#43;web@gmail.com (けり)</author>
      <guid>https://kerikeri.top/posts/2020-04-25-slalom-trajectory-2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://kerikeri.top/posts/2020-04-25-slalom-trajectory-1/&#34;&gt;前回の記事&lt;/a&gt;
の続きです．&lt;/p&gt;
&lt;p&gt;今回の記事では，なめらかなスラローム軌道の具体的な設計方法を紹介します．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>なめらかなスラロームの設計① スラローム概要</title>
      <link>https://kerikeri.top/posts/2020-04-25-slalom-trajectory-1/</link>
      <pubDate>Sat, 25 Apr 2020 11:00:00 +0900</pubDate>
      <author>kerikun11&#43;web@gmail.com (けり)</author>
      <guid>https://kerikeri.top/posts/2020-04-25-slalom-trajectory-1/</guid>
      <description>&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;今回はマイクロマウスにおけるスラローム走行のお話です．&lt;/p&gt;
&lt;p&gt;私が使っているスラローム走行の概要とその軌道の生成方法などを紹介します．&lt;/p&gt;
&lt;p&gt;特にマイクロマウスを例に話を進めますが，2輪車両の軌道生成方法として汎用的に使える内容です．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>なめらかな加速の設計④ C&#43;&#43;による実装例</title>
      <link>https://kerikeri.top/posts/2018-04-29-accel-designer4/</link>
      <pubDate>Sun, 29 Apr 2018 15:35:38 +0900</pubDate>
      <author>kerikun11&#43;web@gmail.com (けり)</author>
      <guid>https://kerikeri.top/posts/2018-04-29-accel-designer4/</guid>
      <description>&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://kerikeri.top/posts/2018-04-29-accel-designer3/&#34;&gt;前回の記事&lt;/a&gt;
の続きです．&lt;/p&gt;
&lt;p&gt;今回の記事では，今までに示した設計法のC++による実装例を紹介します．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>なめらかな加速の設計③ 走行距離を考慮した速度設計</title>
      <link>https://kerikeri.top/posts/2018-04-29-accel-designer3/</link>
      <pubDate>Sun, 29 Apr 2018 14:35:38 +0900</pubDate>
      <author>kerikun11&#43;web@gmail.com (けり)</author>
      <guid>https://kerikeri.top/posts/2018-04-29-accel-designer3/</guid>
      <description>&lt;h2 id=&#34;設計2走行距離を考慮した速度設計&#34;&gt;設計2・走行距離を考慮した速度設計&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://kerikeri.top/posts/2018-04-29-accel-designer2/&#34;&gt;前回の記事&lt;/a&gt;
の続きです．&lt;/p&gt;
&lt;p&gt;この記事では，設計1の曲線加速を組み合わせて，走行距離を考慮した速度設計について考えます．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>なめらかな加速の設計② 曲線加速の設計</title>
      <link>https://kerikeri.top/posts/2018-04-29-accel-designer2/</link>
      <pubDate>Sun, 29 Apr 2018 13:35:38 +0900</pubDate>
      <author>kerikun11&#43;web@gmail.com (けり)</author>
      <guid>https://kerikeri.top/posts/2018-04-29-accel-designer2/</guid>
      <description>&lt;h2 id=&#34;設計1加速曲線の設計&#34;&gt;設計1・加速曲線の設計&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://kerikeri.top/posts/2018-04-29-accel-designer1/&#34;&gt;前回の記事&lt;/a&gt;
の続きです．&lt;/p&gt;
&lt;p&gt;この記事では，前回紹介した&lt;strong&gt;設計1&lt;/strong&gt;の曲線加速の設計について考えます．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>なめらかな加速の設計① 台形加速と曲線加速</title>
      <link>https://kerikeri.top/posts/2018-04-29-accel-designer1/</link>
      <pubDate>Sun, 29 Apr 2018 12:35:38 +0900</pubDate>
      <author>kerikun11&#43;web@gmail.com (けり)</author>
      <guid>https://kerikeri.top/posts/2018-04-29-accel-designer1/</guid>
      <description>&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;p&gt;今回はマイクロマウスにおける速度設計のお話です．&lt;/p&gt;
&lt;p&gt;長い直線などを走行するとき，タイムを縮めるため，最大速度まで加速して，ターン直前に減速します．&lt;/p&gt;
&lt;p&gt;ここで注意したのが，途中経過の如何にかかわらず，終点の位置や速度は守らなければならないということです．&lt;/p&gt;
&lt;p&gt;今回の記事では，終点位置，終点速度や最大速度などの拘束条件から，走行途中の速度軌道を算出するアルゴリズムを紹介します．&lt;/p&gt;
&lt;p&gt;最後にはC++での実装したクラスも簡単に紹介します．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MATLABでスラローム軌道生成</title>
      <link>https://kerikeri.top/posts/2017-09-04-matlab-trajectory/</link>
      <pubDate>Mon, 04 Sep 2017 14:55:01 +0900</pubDate>
      <author>kerikun11&#43;web@gmail.com (けり)</author>
      <guid>https://kerikeri.top/posts/2017-09-04-matlab-trajectory/</guid>
      <description>&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://kerikeri.top/posts/2017-09-03-pattern-of-turn/&#34;&gt;前回&lt;/a&gt;
の記事ではマイクロマウスのターンの紹介をしました．今回は，そのカーブの軌道の生成方法を紹介したいと思います．&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
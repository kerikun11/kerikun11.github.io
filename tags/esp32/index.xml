<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ESP32 on KERI's Lab</title><link>https://www.kerislab.jp/tags/esp32/</link><description>Recent content in ESP32 on KERI's Lab</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Sun, 17 Mar 2024 16:10:00 +0900</lastBuildDate><atom:link href="https://www.kerislab.jp/tags/esp32/index.xml" rel="self" type="application/rss+xml"/><item><title>フォロ・ロボットを改造してみた</title><link>https://www.kerislab.jp/posts/2024-03-17-folo-robot-retrofitting/</link><pubDate>Sun, 17 Mar 2024 16:10:00 +0900</pubDate><guid>https://www.kerislab.jp/posts/2024-03-17-folo-robot-retrofitting/</guid><description>&lt;h2 id="はじめに">はじめに&lt;/h2>
&lt;p>こんにちは、けりです。&lt;/p>
&lt;p>今回は&lt;a href="https://www.elekit.co.jp/product/MR-9107">エレキット社製のロボットキット「フォロ」&lt;/a>を改造してみたので、簡単に紹介します。&lt;/p></description></item><item><title>ESP32でマイクロマウスを作るメリットとデメリット</title><link>https://www.kerislab.jp/posts/2020-12-11-esp32-mouse/</link><pubDate>Fri, 11 Dec 2020 18:11:57 +0900</pubDate><guid>https://www.kerislab.jp/posts/2020-12-11-esp32-mouse/</guid><description>&lt;p>この記事は
&lt;a href="https://adventar.org/calendars/5829">Micro Mouse Advent Calendar 2020&lt;/a>
の 11 日目の記事です。&lt;/p>
&lt;p>昨日の記事は、FND さんの「今年買ったもの」でした。&lt;br>
めっちゃいろんなもの買っててやっぱ社会人パワー最高ですね！！&lt;br>
ぼくもグラボほしーーー&lt;/p>
&lt;h2 id="はじめに">はじめに&lt;/h2>
&lt;p>さてさて今回の記事では、私が今までに ESP32 でマウスを作ってきてよかったことと辛かったことを紹介したいと思います。&lt;/p>
&lt;p>今後 ESP32 でマウスを作ろうと思っている方の参考になれば幸いです。&lt;/p></description></item><item><title>ESP-IDFプロジェクトをPlatformIOプロジェクトに変換する</title><link>https://www.kerislab.jp/posts/2020-05-11-esp-idf-to-platformio/</link><pubDate>Mon, 11 May 2020 23:11:57 +0900</pubDate><guid>https://www.kerislab.jp/posts/2020-05-11-esp-idf-to-platformio/</guid><description>&lt;h2 id="概要">概要&lt;/h2>
&lt;p>ESP32 の公式開発環境は &lt;a href="https://github.com/espressif/esp-idf">ESP-IDF&lt;/a> ですが、コマンドライン開発環境なので初心者向けではないかもしれません。&lt;/p>
&lt;p>一方、以前の記事 &lt;a href="https://www.kerislab.jp/posts/2018-12-22-platformio/">PlatformIOでESP32の開発をしよう&lt;/a>で紹介した &lt;a href="https://platformio.org/">PlatformIO&lt;/a> では、GUIのVSCodeに拡張機能としてインストールするだけで環境が整うのでとても便利です。&lt;/p>
&lt;p>しかしながら、ESP-IDFやGitHubなどにあるたくさんのサンプルコードは、PlatformIOで直接実行することができません。&lt;/p>
&lt;p>そこで今回は、単純なESP-IDFのプロジェクトをPlatformIOプロジェクトに変換する方法を紹介します。&lt;/p></description></item><item><title>PlatformIOでESP32の開発をしよう</title><link>https://www.kerislab.jp/posts/2018-12-22-platformio/</link><pubDate>Sat, 22 Dec 2018 00:00:00 +0900</pubDate><guid>https://www.kerislab.jp/posts/2018-12-22-platformio/</guid><description>&lt;h2 id="概要">概要&lt;/h2>
&lt;p>この記事は &lt;a href="https://adventar.org/calendars/3279">東京工業大学ロボット技術研究会(rogy) Advent Calendar 2018&lt;/a> の
22日目の記事です。&lt;/p>
&lt;p>こんにちは。けりです。&lt;/p>
&lt;p>今回は、PlatformIOという強力な &lt;strong>マイコン開発環境&lt;/strong> の紹介です。&lt;/p>
&lt;h3 id="platformio-とは">PlatformIO とは？&lt;/h3>
&lt;p>&lt;a href="https://platformio.org/">PlatformIO&lt;/a>とは、mbedやArduinoと似たような感じで、さまざまなボードやライブラリを統一的に開発できる開発環境です。&lt;/p>
&lt;p>PlatformIO はESP32マイコンを公式にサポートしていて、&lt;a href="https://github.com/espressif/esp-idf">ESP-IDF&lt;/a>と&lt;a href="https://github.com/espressif/arduino-esp32">Arduino Core for the ESP32&lt;/a>から選んで開発することができます。&lt;/p></description></item><item><title>ESP32 の Power Management 機能</title><link>https://www.kerislab.jp/posts/2018-06-28-esp32-power-management/</link><pubDate>Thu, 28 Jun 2018 08:50:59 +0900</pubDate><guid>https://www.kerislab.jp/posts/2018-06-28-esp32-power-management/</guid><description>&lt;h2 id="はじめに">はじめに&lt;/h2>
&lt;p>この記事では、ESP32をバッテリー駆動するためのヒントをお届けします。&lt;/p></description></item><item><title>ESP32にSmartConfigでWiFi情報を伝える</title><link>https://www.kerislab.jp/posts/2018-02-16-esp32-smartconfig/</link><pubDate>Fri, 16 Feb 2018 18:51:25 +0900</pubDate><guid>https://www.kerislab.jp/posts/2018-02-16-esp32-smartconfig/</guid><description>&lt;h2 id="wifiのssidとパスワードをどう伝えるか問題">WiFiのSSIDとパスワードをどう伝えるか問題&lt;/h2>
&lt;p>ESP32はWiFiに接続することができますが、ソースコードにWiFiのSSIDとパスワードを書いてしまうと、後から変更できません。&lt;/p>
&lt;p>さらに、ソースコードを公開するときは、SSIDとパスワードの部分をいちいち削除しなければならず、けっこう面倒です。&lt;/p>
&lt;p>以前は&lt;a href="https://www.kerislab.jp/posts/2017-07-29-esp32-wifi-sd/">SDカードを使ってWiFi情報を伝える方法&lt;/a>を紹介しましたが、これも割と手間でした。&lt;/p>
&lt;p>SmartConfigとは、そんな悩みをスマホで解決する機能です。&lt;/p></description></item><item><title>ESP32のすゝめ</title><link>https://www.kerislab.jp/posts/2017-12-06-introduction-to-esp32/</link><pubDate>Wed, 06 Dec 2017 00:00:00 +0900</pubDate><guid>https://www.kerislab.jp/posts/2017-12-06-introduction-to-esp32/</guid><description>&lt;p>こんにちは、けりです。&lt;br>
これは &lt;a href="https://adventar.org/calendars/2361">東京工業大学ロボット技術研究会(rogy) Advent Calender 2017&lt;/a> の6日目の記事です.&lt;/p>
&lt;p>本日は、私が愛用しているマイコン「ESP32」を紹介します。&lt;/p></description></item><item><title>ESP32 Timeライブラリを作りました</title><link>https://www.kerislab.jp/posts/2017-08-30-esp32-time-lib/</link><pubDate>Wed, 30 Aug 2017 10:55:38 +0900</pubDate><guid>https://www.kerislab.jp/posts/2017-08-30-esp32-time-lib/</guid><description>&lt;h2 id="概要">概要&lt;/h2>
&lt;p>こんにちは、けりです。
みなさん、ESP32使ってますか？&lt;/p>
&lt;p>今回はESP32の時刻合わせのArduinoライブラリを作ったので紹介します。&lt;/p></description></item><item><title>ESP32とMicro SDカード</title><link>https://www.kerislab.jp/posts/2017-07-29-esp32-wifi-sd/</link><pubDate>Sat, 29 Jul 2017 00:00:00 +0000</pubDate><guid>https://www.kerislab.jp/posts/2017-07-29-esp32-wifi-sd/</guid><description>&lt;h2 id="概要">概要&lt;/h2>
&lt;p>今回は、ESP32で何か作るときはとりあえず一緒にMicro SDスロットも載せましょうという話です。&lt;/p></description></item><item><title>秋月の時計キットをNTP時計化</title><link>https://www.kerislab.jp/posts/2017-07-23-aki-clock/</link><pubDate>Sun, 23 Jul 2017 00:00:00 +0000</pubDate><guid>https://www.kerislab.jp/posts/2017-07-23-aki-clock/</guid><description>&lt;h2 id="家の玄関で地味に役に立っていた時計">家の玄関で地味に役に立っていた時計&lt;/h2>
&lt;p>かなり前に秋月電子で買った&lt;a href="https://akizukidenshi.com/catalog/g/g104379/">時計キット&lt;/a>。&lt;br>
数字が大きく、遠くからでもよく見えるので自宅の玄関で地味に役立っていました。&lt;/p>
&lt;p>しかし、水晶の精度がいまいちでよくズレるので、7セグの表示部だけを残してESP32によるNTP時計にアップデートしました。&lt;/p></description></item><item><title>ESP32 でデュアルコアを使おう！</title><link>https://www.kerislab.jp/posts/2017-06-24-esp32-dual-core/</link><pubDate>Sat, 24 Jun 2017 00:00:00 +0000</pubDate><guid>https://www.kerislab.jp/posts/2017-06-24-esp32-dual-core/</guid><description>&lt;h2 id="概要">概要&lt;/h2>
&lt;h3 id="esp32-とは">ESP32 とは&lt;/h3>
&lt;figure >
	
		
		&lt;figcaption>
			&lt;h4>ESP32&lt;/h4>
		&lt;/figcaption>
		
		&lt;img src="esp32.jpg" alt="ESP32" style="width: 240px;"/>
	
&lt;/figure>

&lt;p>&lt;a href="https://www.espressif.com/en/products/hardware/esp32/overview">ESP32 Overview | Espressif Systems&lt;/a>&lt;/p>
&lt;p>ESP32 は上海の企業である Espressif Systems から発売されている WiFi&amp;amp;Bluetooth コントローラです。
同時に gcc で開発できるマイコンでもあります。&lt;/p></description></item><item><title>ESP32の設定管理ライブラリの紹介</title><link>https://www.kerislab.jp/posts/2017-06-16-esp32-preferences/</link><pubDate>Fri, 16 Jun 2017 00:00:00 +0000</pubDate><guid>https://www.kerislab.jp/posts/2017-06-16-esp32-preferences/</guid><description>&lt;h2 id="概要">概要&lt;/h2>
&lt;p>みなさん、ESP32使ってますか？僕は使っています。その偉大さには驚くばかりです。&lt;/p>
&lt;p>さて、今回紹介するのは、Arduino core for ESP32に含まれているライブラリ「&lt;a href="https://github.com/espressif/arduino-esp32/tree/master/libraries/Preferences">Preferences&lt;/a>」です。&lt;/p>
&lt;p>ESP32で何か物を作るとき、電源を切っても保存しておきたいデータなどがあると思います。独自の形式やJSONなどでファイルに保存する方法もありますが、保存と復元の処理を実装するのはなかなか面倒です。&lt;/p>
&lt;p>みんなどうせ同じようなことをするでしょうということで、ESP32ではライブラリが用意されていました。&lt;/p>
&lt;p>不揮発性のフラッシュ領域を使ってデータを保存&amp;amp;復元します。&lt;/p></description></item><item><title>ESP32で時間取得</title><link>https://www.kerislab.jp/posts/2017-04-26-esp32-time/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>https://www.kerislab.jp/posts/2017-04-26-esp32-time/</guid><description>&lt;h2 id="概要">概要&lt;/h2>
&lt;p>今回はESP32で現在時刻を取得するサンプルコードの紹介です。&lt;/p>
&lt;p>今回のコードではC++標準の時刻を合わせるので、std::time()関数で時刻を取得することができるようになります。&lt;/p></description></item><item><title>ESP32からメールを送る</title><link>https://www.kerislab.jp/posts/2017-04-08-esp32-mail/</link><pubDate>Sat, 08 Apr 2017 00:00:00 +0000</pubDate><guid>https://www.kerislab.jp/posts/2017-04-08-esp32-mail/</guid><description>&lt;h2 id="概要">概要&lt;/h2>
&lt;p>ESP32にはHTTPSクライアントライブラリがあるので、SMTPプロトコルを使ってGmailを送信してみました。意外にもうまくいってしまったので、共有します。&lt;/p>
&lt;p>Arduino上で動くコードです。esp32-arduino-coreは最新のものを使用してください。古いものだと、SSLまわりでエラーが発生します。&lt;/p></description></item><item><title>ESP-WROOM-32で秋月の売場表示</title><link>https://www.kerislab.jp/posts/2017-03-29-aki-shelf/</link><pubDate>Wed, 29 Mar 2017 00:00:00 +0000</pubDate><guid>https://www.kerislab.jp/posts/2017-03-29-aki-shelf/</guid><description>&lt;h2 id="まずはじめに">まずはじめに&lt;/h2>
&lt;h3 id="秋月の通販サイトが進化">秋月の通販サイトが進化&lt;/h3>
&lt;p>少し前から、&lt;a href="http://akizukidenshi.com/">秋月の通販サイト&lt;/a>で店舗の在庫数と売場の場所が見れるようになりました。&lt;br>
商品写真の下の「店舗情報」というボタンを押すとポップアップが現れ、在庫数と売場が表示されます。&lt;/p></description></item><item><title>ESP32用UIライブラリ</title><link>https://www.kerislab.jp/posts/2017-03-26-user-interface/</link><pubDate>Sun, 26 Mar 2017 00:00:00 +0000</pubDate><guid>https://www.kerislab.jp/posts/2017-03-26-user-interface/</guid><description>&lt;h2 id="概要">概要&lt;/h2>
&lt;p>ESP32も徐々に使い慣れてきました。今回の記事では、ちょっとした工作には欠かせないユーザーインターフェースのコードを紹介します。&lt;/p>
&lt;ul>
&lt;li>スピーカーから音階を鳴らすブザークラス&lt;/li>
&lt;li>タクトスイッチなどのボタンを扱うボタンクラス&lt;/li>
&lt;/ul>
&lt;p>今回のコードは、ESP32用に書かれています。ご注意ください。&lt;/p></description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PIC on KERI's Lab</title><link>https://www.kerislab.jp/tags/pic/</link><description>Recent content in PIC on KERI's Lab</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Wed, 14 Feb 2018 22:02:45 +0900</lastBuildDate><atom:link href="https://www.kerislab.jp/tags/pic/index.xml" rel="self" type="application/rss+xml"/><item><title>アセンブリ言語で書いた電光掲示板</title><link>https://www.kerislab.jp/posts/2018-02-14-pic-scroll-board-asm/</link><pubDate>Wed, 14 Feb 2018 22:02:45 +0900</pubDate><guid>https://www.kerislab.jp/posts/2018-02-14-pic-scroll-board-asm/</guid><description>&lt;h2 id="概要">概要&lt;/h2>
&lt;p>今回の記事は、高校生の時に作った電光掲示板のコードの紹介です。&lt;/p>
&lt;p>PICのアセンブリ言語で書かれています。&lt;/p></description></item><item><title>PICで省エネ時計を作る</title><link>https://www.kerislab.jp/posts/2016-09-12-low-power-clock/</link><pubDate>Mon, 12 Sep 2016 00:00:00 +0000</pubDate><guid>https://www.kerislab.jp/posts/2016-09-12-low-power-clock/</guid><description>&lt;h2 id="概要">概要&lt;/h2>
&lt;h3 id="picで時計">PICで時計&lt;/h3>
&lt;p>久しぶりにPICの話題です。しばらくESP8266やARMマイコンなど、上級のマイコンを使っていましたが、またPICを使ってみたくなりました。&lt;/p>
&lt;p>他のマイコンには真似できないような超低消費電力の時計を作ってみました。&lt;/p></description></item><item><title>PICでリアルタイムクロック</title><link>https://www.kerislab.jp/posts/2016-09-02-pic-rtcc/</link><pubDate>Fri, 02 Sep 2016 00:00:00 +0000</pubDate><guid>https://www.kerislab.jp/posts/2016-09-02-pic-rtcc/</guid><description>&lt;h2 id="概要">概要&lt;/h2>
&lt;p>PIC18F27J53は、リアルタイムクロック&amp;amp;カレンダー(RTCC)モジュールをハードウェアで持っています。今回はそれを使用するためのライブラリを作ったので紹介します。&lt;/p></description></item><item><title>変なキーボード</title><link>https://www.kerislab.jp/posts/2016-04-05-strange-keyboard/</link><pubDate>Tue, 05 Apr 2016 00:00:00 +0000</pubDate><guid>https://www.kerislab.jp/posts/2016-04-05-strange-keyboard/</guid><description>&lt;h2 id="つくったもの">つくったもの&lt;/h2>
&lt;p>ASCIIキーボードとスクロール表示器を作りました。&lt;/p>
&lt;figure >
&lt;figcaption>
&lt;h4>figure&lt;/h4>
&lt;/figcaption>
&lt;img src="figure.png" alt="figure" />
&lt;/figure>
&lt;h2 id="変なキーボード">変なキーボード&lt;/h2>
&lt;ol>
&lt;li>キーボードの表面には２つのロータリースイッチがついています。それらを回すことで文字を選び、送信ボタンを押して送信します。&lt;/li>
&lt;li>もし間違った文字を送信してしまったら、送信ボタンを長押しすることで１文字ずつ削除することができます。&lt;/li>
&lt;li>文章ができたら、送信ボタンをさらに長押しすることで、Enterになり、文を始めからスクロールします。&lt;/li>
&lt;/ol></description></item><item><title>PICでブートローダ</title><link>https://www.kerislab.jp/posts/2016-01-13-pic-bootloader/</link><pubDate>Wed, 13 Jan 2016 00:00:00 +0000</pubDate><guid>https://www.kerislab.jp/posts/2016-01-13-pic-bootloader/</guid><description>&lt;h2 id="概要">概要&lt;/h2>
&lt;h3 id="pic18f27j53を使おう">PIC18F27J53を使おう&lt;/h3>
&lt;p>以前 &lt;a href="https://www.kerislab.jp/posts/2016-01-08-pic18f27j53/">PIC18F27J53のすすめ&lt;/a> という記事を書きました。それの続きで、今回はUSBブートローダの使い方について書きたいと思います。&lt;/p>
&lt;h3 id="ブートローダとは">ブートローダとは&lt;/h3>
&lt;p>ブートローダとは自分自身にプログラムを書きこむプログラムです。これを使うとPICkitなどのライタを使わなくてもプログラムの書き込みをすることができるようになります。&lt;/p>
&lt;p>ただし、初回に一度だけブートローダ用のプログラムをPICkitなどで書きこむ必要があります。&lt;/p>
&lt;h3 id="ユーザープログラム">ユーザープログラム&lt;/h3>
&lt;p>ユーザープログラムとは、ブートローダーにより書き込むプログラムです。あなたが作った、実際に動かすプログラムということです。&lt;/p></description></item><item><title>PICでUSB通信</title><link>https://www.kerislab.jp/posts/2016-01-10-pic-usb/</link><pubDate>Sun, 10 Jan 2016 00:00:00 +0000</pubDate><guid>https://www.kerislab.jp/posts/2016-01-10-pic-usb/</guid><description>&lt;h2 id="概要">概要&lt;/h2>
&lt;p>以前 &lt;a href="https://www.kerislab.jp/posts/2016-01-08-pic18f27j53/">PIC18F27J53のすすめ&lt;/a> という記事を書きました。それの続きで、今回はUSBの使い方について書きたいと思います。&lt;/p>
&lt;p>今回紹介する方法では、USBをUARTの代わりに使えるようにするものです。PICをPCにつなぐとCOMポートが現れます。&lt;/p>
&lt;p>これならUSBシリアル変換モジュールを使う必要はなくります。&lt;/p>
&lt;figure >
&lt;figcaption>
&lt;h4>AE-FT232&lt;/h4>
&lt;/figcaption>
&lt;img src="FT232.jpg" alt="AE-FT232" />
&lt;/figure></description></item><item><title>PIC18F27J53のすすめ</title><link>https://www.kerislab.jp/posts/2016-01-08-pic18f27j53/</link><pubDate>Fri, 08 Jan 2016 00:00:00 +0000</pubDate><guid>https://www.kerislab.jp/posts/2016-01-08-pic18f27j53/</guid><description>&lt;h2 id="pic18f27j53のいいところ">PIC18F27J53のいいところ&lt;/h2>
&lt;h3 id="秋月で売っていること">秋月で売っていること&lt;/h3>
&lt;p>電子工作をするうえでこれはとても大事なこと。「秋月で売っているなら使ってみるか」ってなりますよね。&lt;/p>
&lt;p>もちろん、秋月なので値段が安い！！&lt;br>
&lt;strong>1個270円&lt;/strong>です(2016年1月現在)。&lt;/p>
&lt;figure >
&lt;figcaption>
&lt;h4>PIC18F27J53&lt;/h4>
&lt;/figcaption>
&lt;img src="view.jpg" alt="PIC18F27J53" style="width: 240px;"/>
&lt;/figure></description></item><item><title>Charge Station Ver. 6</title><link>https://www.kerislab.jp/posts/2015-10-09-charge-station-6/</link><pubDate>Fri, 09 Oct 2015 00:00:00 +0000</pubDate><guid>https://www.kerislab.jp/posts/2015-10-09-charge-station-6/</guid><description/></item><item><title>研究報告書 Charge Station</title><link>https://www.kerislab.jp/posts/2015-07-01-charge-station-ssr/</link><pubDate>Wed, 01 Jul 2015 22:02:45 +0900</pubDate><guid>https://www.kerislab.jp/posts/2015-07-01-charge-station-ssr/</guid><description>&lt;p>これは東京工業大学ロボット技術研究会平成27年度後期研究報告書に投稿された文書です。&lt;/p>
&lt;h2 id="charge-station-とは">Charge Station とは&lt;/h2>
&lt;p>Charge Station は、自作の携帯電話充電器です。僕が命名しました。昨年（2014年）の秋ごろに初代Charge Station を作り始め、今ではVer.6となっています。主な機能は、充電完了後の給電停止と、充電電流の計測です。夜寝るときなど、携帯電話を充電器につないだまま長時間放置することに抵抗があったため、自動で給電を止める装置を自作することにしました。&lt;/p>
&lt;p>また、昨夏に100Wのソーラーパネルを購入し、100W級ソーラーシステムを自作しました。Charge Station はその電力をもとに動作します。限られた電気を有効に使うためにCharge Stationをつくりました。&lt;/p></description></item><item><title>メダカの照明の自作</title><link>https://www.kerislab.jp/posts/2015-06-04-killifish-light/</link><pubDate>Thu, 04 Jun 2015 00:00:00 +0000</pubDate><guid>https://www.kerislab.jp/posts/2015-06-04-killifish-light/</guid><description>こんにちは。 けり(@kerikun11)です。 みなさん、進捗いかがですか？ 僕は、ぼちぼちです。 今回紹介するのは、 メダカの水槽の照明です。 高校</description></item><item><title>Charge Station の紹介</title><link>https://www.kerislab.jp/posts/2015-02-16-charge-station-1-5/</link><pubDate>Mon, 16 Feb 2015 00:00:00 +0000</pubDate><guid>https://www.kerislab.jp/posts/2015-02-16-charge-station-1-5/</guid><description>みなさん、こんにちは。 14の けり @kerikun11 です。 春休みになりました。 みなさん、進捗どうですか？ 今日ご紹介するのは Charge Station です。 これだけだと何かわからない</description></item><item><title>100W級ソーラーシステムの自作</title><link>https://www.kerislab.jp/posts/2014-09-14-solar-system/</link><pubDate>Sun, 14 Sep 2014 00:00:00 +0000</pubDate><guid>https://www.kerislab.jp/posts/2014-09-14-solar-system/</guid><description>どーも。けり（twitter:@kerikun11）です。id研です。 夏休みにもかかわらず、バイトを入れすぎて 全然遊んでないじゃないか！ じゃ</description></item></channel></rss>